<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gj.wacai.payIn.dao.PayInDao">

	<resultMap id="BaseResultMap" type="com.gj.wacai.payIn.pojo.PayIn">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="money" property="money" jdbcType="DOUBLE" />
		<result column="type_id" property="typeId" jdbcType="INTEGER" />
		<result column="account_id" property="accountId" jdbcType="INTEGER" />
		<result column="time" property="time" jdbcType="TIMESTAMP" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="is_valid" property="isValid" jdbcType="INTEGER"/>
	</resultMap>

	<sql id="Base_Column_List">
		id, money, type_id, account_id, time, create_time,
		update_time, remark,
		user_id,is_valid
	</sql>

	<sql id="Dto_Column_List">
		pi.id as id, pi.money as money, pi.type_id as typeId,
		pi.account_id as
		accountId, pi.time as time,
		pi.create_time as
		createTime, pi.update_time as updateTime, pi.remark as remark,
		pi.user_id as userId,pi.is_valid as isValid,
		pit.name as typeName, a.name as accountName
	</sql>


	<insert id="insert" parameterType="com.gj.wacai.payIn.pojo.PayIn">
		insert into t_pay_in
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="typeId != null">
				type_id,
			</if>
			<if test="accountId != null">
				account_id,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="isValid != null">
				is_valid
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="money != null">
				#{money,jdbcType=DOUBLE},
			</if>
			<if test="typeId != null">
				#{typeId,jdbcType=INTEGER},
			</if>
			<if test="accountId != null">
				#{accountId,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="isValid != null">
				#{isValid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	<select id="selectByParams" parameterType="payInQuery" resultType="payInDto">
		select
		<include refid="Dto_Column_List" />
		from t_pay_in pi
		left join t_pay_in_type pit on (pi.type_id = pit.id)
		left join t_account a on (pi.account_id = a.id)
		<where>
			pi.user_id = #{userId} and pi.is_valid = 1
			<if test="queryPayInTypeId != null">
				and pi.type_id = #{queryPayInTypeId}
			</if>
			<if test="queryPayInAccountId != null">
				and pi.account_id = #{queryPayInAccountId}
			</if>
			<if test="queryPayInTime!=null and queryPayInTime!=''">
				<![CDATA[
				and pi.time <= #{queryPayInTime}
				]]>
			</if>
		</where>
		order by pi.time desc
	</select>

	<select id="selectByIdAndUserId" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from t_pay_in
		where id = #{id} and user_id = #{userId} and is_valid = 1
	</select>
	
	<update id="update" parameterType="com.gj.wacai.payIn.pojo.PayIn">
		update t_pay_in
		<set>
			<if test="money != null">
				money = #{money,jdbcType=DOUBLE},
			</if>
			<if test="typeId != null">
				type_id = #{typeId,jdbcType=INTEGER},
			</if>
			<if test="accountId != null">
				account_id = #{accountId,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<update id="deleteByIdAndUserId">
		update t_pay_in
		set is_valid = 0
		where id=#{id} and user_id = #{userId}
	</update>
</mapper>